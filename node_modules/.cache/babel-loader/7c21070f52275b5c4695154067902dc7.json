{"ast":null,"code":"// import React from 'react';\n// import SignatureCanvas from 'react-signature-canvas';\n// class AddPerson extends Component {\n//     state = {\n//         open: false,\n//         trimmedDataURL: null,\n//     };\n//     sigPad = {\n//         width: 500,\n//         height: 200,\n//     };\n//     handleClickOpen = () => {\n//         // Opens the popup modal window\n//         this.setState({ open: true });\n//     };\n//     clear = () => {\n//         // Clears the signature pad / input field for signature\n//         this.sigPad.clear()\n//     };\n//     trim = () => {\n//         this.setState({ trimmedDataURL: this.sigPad.getCanvas().toDataURL('image/png') });\n//     };\n//     handleChange = name => event => {\n//         this.setState({\n//             [name]: event.target.value,\n//         });\n//     };\n//     handleClose = (e) => {\n//         // Close the popup modal window\n//         this.setState({ open: false });\n//     };\n//     handleSave = () => {\n//         var { trimmedDataURL } = this.state;\n//         this.trim(); /* This runs the TRIM function */\n//         var NewPerson = [{\n//             Firstname: this.state.addPersonFirstname,\n//             Lastname: this.state.addPersonLastname,\n//             Birthday: this.state.addPersonBirthday,\n//             SigImage: this.state.trimmedDataURL\n//         }];\n//         // Get previous Persons from Storage and write to a PreviousPersons - Callback version\n//         localforage.getItem('persons', function (err, PreviousPersons) {\n//             // Create combined var with PreviousPersons and NewPerson - Start\n//             var CombinedPersons\n//             if (PreviousPersons === null) {\n//                 CombinedPersons = NewPerson\n//             } else {\n//                 CombinedPersons = [...PreviousPersons, ...NewPerson]\n//             }\n//             // Create combined var with PreviousPersons and NewPerson - End\n//             // Write CombinedPersons to storage - Start\n//             localforage.setItem('persons', CombinedPersons)\n//                 .then(function (value) {\n//                     // Do other things once the value has been saved.\n//                     console.log(CombinedPersons);\n//                 }).catch(function (err) {\n//                     // This code runs if there were any errors\n//                     console.log(err);\n//                 })\n//             // Write combined list to storage - End\n//         })\n//     };\n//     render() {\n//         var { trimmedDataURL } = this.state;\n//         return (\n//             <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n//                 <Button mini color=\"inherit\" aria-label=\"Add\" onClick={this.handleClickOpen}>\n//                     <AddIcon />\n//                 </Button>\n//                 <Dialog\n//                     open={this.state.open}\n//                     onClose={this.handleClose}\n//                     aria-labelledby=\"form-dialog-title\"\n//                 >\n//                     <DialogTitle id=\"form-dialog-title\" align='center'>Add a Person</DialogTitle>\n//                     <Divider variant=\"middle\" style={{ marginBottom: 25 }} />\n//                     <DialogContent>\n//                         <DialogContentText>Please enter details:</DialogContentText>\n//                         <TextField\n//                             id=\"addPersonFormFirstname\"\n//                             label=\"Vorname\"\n//                             type=\"string\"\n//                             onChange={this.handleChange('addPersonFirstname')}\n//                             style={{ display: 'flex', flexWrap: 'wrap', marginBottom: 25 }}\n//                             margin=\"dense\"\n//                         />\n//                         <TextField\n//                             id=\"addPersonFormLastname\"\n//                             label=\"Nachname\"\n//                             type=\"string\"\n//                             onChange={this.handleChange('addPersonLastname')}\n//                             style={{ display: 'flex', flexWrap: 'wrap', marginBottom: 25 }}\n//                             margin=\"dense\"\n//                         />\n//                         <TextField\n//                             id=\"addPersonFormBirthday\"\n//                             label=\"Geburtsdatum\"\n//                             type=\"date\"\n//                             onChange={this.handleChange('addPersonBirthday')}\n//                             style={{ display: 'flex', flexWrap: 'wrap', marginBottom: 25, paddingTop: 5 }}\n//                             defaultValue=\"2019-01-01\"\n//                             InputLabelProps={{ shrink: true }}\n//                             margin=\"dense\"\n//                         />\n//                         <Divider variant=\"middle\" style={{ marginBottom: 25 }} />\n//                         <div className={styles.container}>\n//                             <div className={styles.sigContainer}>\n//                                 <SignatureCanvas backgroundColor='rgba(246,246,246,1)' penColor='navy' canvasProps={{ className: styles.sigPad }} ref={(ref) => { this.sigPad = ref }} />\n//                             </div>\n//                             <div>\n//                                 <button className={styles.buttons} onClick={this.clear}>Clear</button>\n//                                 <button className={styles.buttons} onClick={this.trim}>Trim</button>\n//                             </div>\n//                             {this.state.trimmedDataURL ? <img alt=\"Signature\" className={styles.sigImage} src={this.state.trimmedDataURL} /> : null}\n//                         </div>\n//                     </DialogContent>\n//                     <DialogActions>\n//                         <Button onClick={this.handleClose} variant=\"contained\" color=\"default\">Close</Button>\n//                         <Button onClick={this.handleSave} variant=\"contained\" color=\"primary\">Save</Button>\n//                     </DialogActions>\n//                     <Divider variant=\"middle\" style={{ marginBottom: 25 }} />\n//                 </Dialog>\n//             </div>\n//         );\n//     }\n// }\n// export default AddPerson;","map":{"version":3,"sources":["/home/priya/Desktop/pdf-application/pdf-preview-react/src/components/checked.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\n// import SignatureCanvas from 'react-signature-canvas';\n\n// class AddPerson extends Component {\n\n//     state = {\n//         open: false,\n//         trimmedDataURL: null,\n//     };\n\n//     sigPad = {\n//         width: 500,\n//         height: 200,\n//     };\n\n//     handleClickOpen = () => {\n//         // Opens the popup modal window\n//         this.setState({ open: true });\n//     };\n\n//     clear = () => {\n//         // Clears the signature pad / input field for signature\n//         this.sigPad.clear()\n//     };\n\n//     trim = () => {\n//         this.setState({ trimmedDataURL: this.sigPad.getCanvas().toDataURL('image/png') });\n//     };\n\n//     handleChange = name => event => {\n//         this.setState({\n//             [name]: event.target.value,\n//         });\n//     };\n\n\n\n//     handleClose = (e) => {\n//         // Close the popup modal window\n//         this.setState({ open: false });\n//     };\n\n//     handleSave = () => {\n//         var { trimmedDataURL } = this.state;\n\n//         this.trim(); /* This runs the TRIM function */\n\n//         var NewPerson = [{\n//             Firstname: this.state.addPersonFirstname,\n//             Lastname: this.state.addPersonLastname,\n//             Birthday: this.state.addPersonBirthday,\n//             SigImage: this.state.trimmedDataURL\n//         }];\n\n//         // Get previous Persons from Storage and write to a PreviousPersons - Callback version\n//         localforage.getItem('persons', function (err, PreviousPersons) {\n\n//             // Create combined var with PreviousPersons and NewPerson - Start\n//             var CombinedPersons\n//             if (PreviousPersons === null) {\n//                 CombinedPersons = NewPerson\n//             } else {\n//                 CombinedPersons = [...PreviousPersons, ...NewPerson]\n//             }\n//             // Create combined var with PreviousPersons and NewPerson - End\n\n//             // Write CombinedPersons to storage - Start\n//             localforage.setItem('persons', CombinedPersons)\n//                 .then(function (value) {\n//                     // Do other things once the value has been saved.\n//                     console.log(CombinedPersons);\n//                 }).catch(function (err) {\n//                     // This code runs if there were any errors\n//                     console.log(err);\n//                 })\n//             // Write combined list to storage - End\n\n//         })\n//     };\n\n\n\n//     render() {\n//         var { trimmedDataURL } = this.state;\n//         return (\n//             <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n//                 <Button mini color=\"inherit\" aria-label=\"Add\" onClick={this.handleClickOpen}>\n//                     <AddIcon />\n//                 </Button>\n\n//                 <Dialog\n//                     open={this.state.open}\n//                     onClose={this.handleClose}\n//                     aria-labelledby=\"form-dialog-title\"\n//                 >\n\n//                     <DialogTitle id=\"form-dialog-title\" align='center'>Add a Person</DialogTitle>\n\n//                     <Divider variant=\"middle\" style={{ marginBottom: 25 }} />\n\n//                     <DialogContent>\n\n//                         <DialogContentText>Please enter details:</DialogContentText>\n\n//                         <TextField\n//                             id=\"addPersonFormFirstname\"\n//                             label=\"Vorname\"\n//                             type=\"string\"\n//                             onChange={this.handleChange('addPersonFirstname')}\n//                             style={{ display: 'flex', flexWrap: 'wrap', marginBottom: 25 }}\n//                             margin=\"dense\"\n//                         />\n\n//                         <TextField\n//                             id=\"addPersonFormLastname\"\n//                             label=\"Nachname\"\n//                             type=\"string\"\n//                             onChange={this.handleChange('addPersonLastname')}\n//                             style={{ display: 'flex', flexWrap: 'wrap', marginBottom: 25 }}\n//                             margin=\"dense\"\n//                         />\n\n//                         <TextField\n//                             id=\"addPersonFormBirthday\"\n//                             label=\"Geburtsdatum\"\n//                             type=\"date\"\n//                             onChange={this.handleChange('addPersonBirthday')}\n//                             style={{ display: 'flex', flexWrap: 'wrap', marginBottom: 25, paddingTop: 5 }}\n//                             defaultValue=\"2019-01-01\"\n//                             InputLabelProps={{ shrink: true }}\n//                             margin=\"dense\"\n//                         />\n\n//                         <Divider variant=\"middle\" style={{ marginBottom: 25 }} />\n\n//                         <div className={styles.container}>\n//                             <div className={styles.sigContainer}>\n//                                 <SignatureCanvas backgroundColor='rgba(246,246,246,1)' penColor='navy' canvasProps={{ className: styles.sigPad }} ref={(ref) => { this.sigPad = ref }} />\n//                             </div>\n//                             <div>\n//                                 <button className={styles.buttons} onClick={this.clear}>Clear</button>\n//                                 <button className={styles.buttons} onClick={this.trim}>Trim</button>\n//                             </div>\n//                             {this.state.trimmedDataURL ? <img alt=\"Signature\" className={styles.sigImage} src={this.state.trimmedDataURL} /> : null}\n//                         </div>\n\n//                     </DialogContent>\n\n//                     <DialogActions>\n//                         <Button onClick={this.handleClose} variant=\"contained\" color=\"default\">Close</Button>\n//                         <Button onClick={this.handleSave} variant=\"contained\" color=\"primary\">Save</Button>\n//                     </DialogActions>\n\n//                     <Divider variant=\"middle\" style={{ marginBottom: 25 }} />\n\n//                 </Dialog>\n//             </div>\n//         );\n//     }\n\n\n// }\n\n// export default AddPerson;"]},"metadata":{},"sourceType":"module"}