{"ast":null,"code":"import _classCallCheck from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/priya/Desktop/pdf-application/pdf-preview-react/src/components/Dragsidebar.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport SignaturePad from 'react-signature-canvas';\nimport styles from '../assets/styles.css';\n\nvar Popupsignature = /*#__PURE__*/function (_React$Component) {\n  _inherits(Popupsignature, _React$Component);\n\n  var _super = _createSuper(Popupsignature);\n\n  function Popupsignature() {\n    var _this;\n\n    _classCallCheck(this, Popupsignature);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      trimmedDataURL: null\n    };\n    _this.sigPad = {};\n\n    _this.clear = function () {\n      _this.sigPad.clear();\n    };\n\n    _this.trim = function () {\n      _this.setState({\n        trimmedDataURL: _this.sigPad.getTrimmedCanvas().toDataURL('image/png')\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Popupsignature, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var trimmedDataURL = this.state.trimmedDataURL;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"popup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Popup, {\n        modal: true,\n        trigger: /*#__PURE__*/React.createElement(\"button\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 18\n          }\n        }, \"Open Signature Pad\"),\n        closeOnDocumentClick: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 14\n        }\n      }, function (close) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SignaturePad, {\n          ref: sigCanvas,\n          canvasProps: {\n            className: \"signatureCanvas\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: save,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }\n        }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: clear,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }\n        }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: close,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }\n        }, \"Close\"));\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.sigContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(SignaturePad, {\n        canvasProps: {\n          className: styles.sigPad\n        },\n        ref: function ref(_ref) {\n          _this2.sigPad = _ref;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: styles.buttons,\n        onClick: this.clear,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: styles.buttons,\n        onClick: this.trim,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, \"Trim\")), trimmedDataURL ? /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"my signature\",\n        style: {\n          display: \"block\",\n          margin: \"0 auto\",\n          border: \"1px solid black\",\n          width: \"150px\"\n        },\n        src: trimmedDataURL,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }) : null), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.props.closePopup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, \"close me\")));\n    }\n  }]);\n\n  return Popupsignature;\n}(React.Component);\n\nexport default Popupsignature;","map":{"version":3,"sources":["/home/priya/Desktop/pdf-application/pdf-preview-react/src/components/Dragsidebar.js"],"names":["React","SignaturePad","styles","Popupsignature","state","trimmedDataURL","sigPad","clear","trim","setState","getTrimmedCanvas","toDataURL","close","sigCanvas","className","save","container","sigContainer","ref","buttons","display","margin","border","width","props","closePopup","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SignaturePad from 'react-signature-canvas'\nimport styles from '../assets/styles.css'\n\nclass Popupsignature extends React.Component {\n    state = {\n        trimmedDataURL: null,\n       \n      };\n\n    \n      sigPad = {}\n      clear = () => {\n        this.sigPad.clear()\n      }\n      trim = () => {\n        this.setState({\n          trimmedDataURL: this.sigPad.getTrimmedCanvas()\n            .toDataURL('image/png')\n        })\n      }\n  render() { \n    let { trimmedDataURL } = this.state\n\n    return (\n      <div className='popup'>\n             <Popup\n        modal\n        trigger={<button>Open Signature Pad</button>}\n        closeOnDocumentClick={false}\n      > \n        {close => (\n          <>\n            <SignaturePad\n              ref={sigCanvas}\n              canvasProps={{\n                className: \"signatureCanvas\"\n              }}\n            />\n            {/* Button to trigger save canvas image */}\n            <button onClick={save}>Save</button>\n            <button onClick={clear}>Clear</button>\n            <button onClick={close}>Close</button>\n          </>\n        )}\n      </Popup>\n        <div className='popup_inner'>\n        <div className={styles.container}>\n          <div className={styles.sigContainer}>\n            <SignaturePad canvasProps={{ className: styles.sigPad }}\n              ref={(ref) => { this.sigPad = ref }} />\n          </div>\n          <div>\n            <button className={styles.buttons} onClick={this.clear}>\n              Clear\n        </button>\n            <button className={styles.buttons} onClick={this.trim}>\n              Trim\n        </button>\n          </div>\n          {trimmedDataURL\n            ? <img \n            alt=\"my signature\"\n            style={{\n              display: \"block\",\n              margin: \"0 auto\",\n              border: \"1px solid black\",\n              width: \"150px\"\n            }}\n              src={trimmedDataURL} />\n            : null}\n        </div>\n\n        <button onClick={this.props.closePopup}>close me</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Popupsignature;"]},"metadata":{},"sourceType":"module"}