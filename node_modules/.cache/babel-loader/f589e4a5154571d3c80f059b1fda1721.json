{"ast":null,"code":"import _classCallCheck from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _slicedToArray from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/priya/Desktop/pdf-application/pdf-preview-react/src/components/Dragsidebar.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useRef } from 'react';\nimport SignaturePad from 'react-signature-canvas';\nimport styles from '../assets/styles.css';\nimport Popup from \"reactjs-popup\";\n\nfunction Homepreview() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageURL = _useState2[0],\n      setImageURL = _useState2[1];\n\n  var sigCanvas = useRef({});\n\n  var clear = function clear() {\n    return sigCanvas.current.clear();\n  };\n\n  var save = function save() {\n    return setImageURL(sigCanvas.current.getTrimmedCanvas().toDataURL(\"image/png\"));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Signature Pad Example\"), /*#__PURE__*/React.createElement(Popup, {\n    modal: true,\n    trigger: /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }\n    }, \"Open Signature Pad\"),\n    closeOnDocumentClick: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, function (close) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SignaturePad, {\n      ref: sigCanvas,\n      canvasProps: {\n        className: \"signatureCanvas\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: save,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: clear,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: close,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, \"Close\"));\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), imageURL ? /*#__PURE__*/React.createElement(\"img\", {\n    src: imageURL,\n    alt: \"my signature\",\n    style: {\n      display: \"block\",\n      margin: \"0 auto\",\n      border: \"1px solid black\",\n      width: \"150px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }) : null);\n}\n\nvar Popupsignature = /*#__PURE__*/function (_React$Component) {\n  _inherits(Popupsignature, _React$Component);\n\n  var _super = _createSuper(Popupsignature);\n\n  function Popupsignature() {\n    var _this2;\n\n    _classCallCheck(this, Popupsignature);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      trimmedDataURL: null\n    };\n    _this2.sigPad = {};\n\n    _this2.clear = function () {\n      _this2.sigPad.clear();\n    };\n\n    _this2.trim = function () {\n      _this2.setState({\n        trimmedDataURL: _this2.sigPad.getTrimmedCanvas().toDataURL('image/png')\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(Popupsignature, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var trimmedDataURL = this.state.trimmedDataURL;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"popup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Popup, {\n        modal: true,\n        trigger: /*#__PURE__*/React.createElement(\"button\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 24\n          }\n        }, \"Open Signature Pad\"),\n        closeOnDocumentClick: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SignaturePad, {\n        ref: function ref(_ref) {\n          _this3.sigPad = _ref;\n        },\n        canvasProps: {\n          className: \"signatureCanvas\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.trim,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.props.closePopup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, \"close me\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }\n      }), trimmedDataURL ? /*#__PURE__*/React.createElement(\"img\", {\n        src: trimmedDataURL,\n        alt: \"my signature\",\n        style: {\n          display: \"block\",\n          margin: \"0 auto\",\n          border: \"1px solid black\",\n          width: \"150px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }) : null);\n    }\n  }]);\n\n  return Popupsignature;\n}(React.Component);\n\nexport default Popupsignature;","map":{"version":3,"sources":["/home/priya/Desktop/pdf-application/pdf-preview-react/src/components/Dragsidebar.js"],"names":["React","useState","useRef","SignaturePad","styles","Popup","Homepreview","imageURL","setImageURL","sigCanvas","clear","current","save","getTrimmedCanvas","toDataURL","close","className","display","margin","border","width","Popupsignature","state","trimmedDataURL","sigPad","trim","setState","ref","props","closePopup","Component"],"mappings":"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","sourcesContent":["import React ,{ useState, useRef } from 'react';\nimport SignaturePad from 'react-signature-canvas'\nimport styles from '../assets/styles.css'\nimport Popup from \"reactjs-popup\";\n\nfunction Homepreview() {\n    const [imageURL, setImageURL] = useState(null); \n    const sigCanvas = useRef({});\n    const clear = () => sigCanvas.current.clear();\n    const save = () =>\n      setImageURL(sigCanvas.current.getTrimmedCanvas().toDataURL(\"image/png\"));\n  \n    return (\n      <div className=\"App\">\n        <h1>Signature Pad Example</h1>\n        <Popup\n          modal\n          trigger={<button>Open Signature Pad</button>}\n          closeOnDocumentClick={false}\n        > \n          {close => (\n            <>\n              <SignaturePad\n                ref={sigCanvas}\n                canvasProps={{\n                  className: \"signatureCanvas\"\n                }}\n              />\n              {/* Button to trigger save canvas image */}\n              <button onClick={save}>Save</button>\n              <button onClick={clear}>Clear</button>\n              <button onClick={close}>Close</button>\n            </>\n          )}\n        </Popup>\n        <br />\n        <br />\n       \n        {imageURL ? (\n          <img\n            src={imageURL}\n            alt=\"my signature\"\n            style={{\n              display: \"block\",\n              margin: \"0 auto\",\n              border: \"1px solid black\",\n              width: \"150px\"\n            }}\n          />\n        ) : null}\n      </div>\n    );\n  }\nclass Popupsignature extends React.Component {\n     \n    state = {\n        trimmedDataURL: null,\n      };\n      \n      sigPad = {}\n      clear = () => {\n        this.sigPad.clear()\n      }\n\n      trim = () => {\n        this.setState({\n          trimmedDataURL: this.sigPad.getTrimmedCanvas()\n            .toDataURL('image/png')\n        })\n      }\n\n  render() { \n    let { trimmedDataURL } = this.state\n\n    return (\n      <div className='popup'>\n             <Popup\n        modal trigger={<button>Open Signature Pad</button>}\n        closeOnDocumentClick={false}> \n       <>\n            <SignaturePad\n             ref={(ref) => { this.sigPad = ref }} \n              canvasProps={{\n                className: \"signatureCanvas\"\n              }}\n            />\n          <button onClick={this.trim}>Save</button>\n          <button onClick={this.props.closePopup}>close me</button>\n          </>\n      \n\n      </Popup>\n      <br>\n      </br>\n      {trimmedDataURL ? (\n        <img\n          src={trimmedDataURL}\n          alt=\"my signature\"\n          style={{\n            display: \"block\",\n            margin: \"0 auto\",\n            border: \"1px solid black\",\n            width: \"150px\"\n          }}\n        />\n      ) : null}\n      \n      \n      </div>\n    );\n  }\n}\n\nexport default Popupsignature;\n\n\n\n"]},"metadata":{},"sourceType":"module"}