{"ast":null,"code":"import _defineProperty from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _objectSpread from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/priya/Desktop/pdf-application/pdf-preview-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/priya/Desktop/pdf-application/pdf-preview-react/src/components/Homepreview.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport uuid from 'uuid/v4';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'; // a little function to help us with reordering the result\n\nvar reorder = function reorder(list, startIndex, endIndex) {\n  var result = Array.from(list);\n\n  var _result$splice = result.splice(startIndex, 1),\n      _result$splice2 = _slicedToArray(_result$splice, 1),\n      removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\n * Moves an item from one list to another list.\n */\n\n\nvar copy = function copy(source, destination, droppableSource, droppableDestination) {\n  var sourceClone = Array.from(source);\n  var destClone = Array.from(destination);\n  var item = sourceClone[droppableSource.index];\n  destClone.splice(droppableDestination.index, 0, _objectSpread({}, item, {\n    id: uuid()\n  }));\n  return destClone;\n};\n\nvar move = function move(source, destination, droppableSource, droppableDestination) {\n  var sourceClone = Array.from(source);\n  var destClone = Array.from(destination);\n\n  var _sourceClone$splice = sourceClone.splice(droppableSource.index, 1),\n      _sourceClone$splice2 = _slicedToArray(_sourceClone$splice, 1),\n      removed = _sourceClone$splice2[0];\n\n  destClone.splice(droppableDestination.index, 0, removed);\n  var result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nvar grid = 8;\nvar ITEMS = [{\n  id: uuid(),\n  content: 'Headline'\n}, {\n  id: uuid(),\n  content: 'Copy'\n}, {\n  id: uuid(),\n  content: 'Image'\n}, {\n  id: uuid(),\n  content: 'Slideshow'\n}, {\n  id: uuid(),\n  content: 'Quote'\n}];\n\nvar Homepreview = /*#__PURE__*/function (_Component) {\n  _inherits(Homepreview, _Component);\n\n  var _super = _createSuper(Homepreview);\n\n  function Homepreview() {\n    var _this;\n\n    _classCallCheck(this, Homepreview);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = _defineProperty({}, uuid(), []);\n\n    _this.onDragEnd = function (result) {\n      var source = result.source,\n          destination = result.destination; // dropped outside the list\n\n      if (!destination) {\n        return;\n      }\n\n      switch (source.droppableId) {\n        case destination.droppableId:\n          _this.setState(_defineProperty({}, destination.droppableId, reorder(_this.state[source.droppableId], source.index, destination.index)));\n\n          break;\n\n        case 'ITEMS':\n          _this.setState(_defineProperty({}, destination.droppableId, copy(ITEMS, _this.state[destination.droppableId], source, destination)));\n\n          break;\n\n        default:\n          _this.setState(move(_this.state[source.droppableId], _this.state[destination.droppableId], source, destination));\n\n          break;\n      }\n    };\n\n    _this.addList = function (e) {\n      _this.setState(_defineProperty({}, uuid(), []));\n    };\n\n    return _this;\n  }\n\n  _createClass(Homepreview, [{\n    key: \"render\",\n    // Normally you would want to split things out into separate components.\n    // But in this example everything is just done in one place for simplicity\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"ITEMS\",\n        isDropDisabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(Kiosk, {\n          innerRef: provided.innerRef,\n          isDraggingOver: snapshot.isDraggingOver,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }\n        }, ITEMS.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: item.id,\n            draggableId: item.id,\n            index: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }\n          }, function (provided, snapshot) {\n            return /*#__PURE__*/React.createElement(React.Fragment, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(Item, Object.assign({\n              innerRef: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              isDragging: snapshot.isDragging,\n              style: provided.draggableProps.style,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 45\n              }\n            }), item.content), snapshot.isDragging && /*#__PURE__*/React.createElement(Clone, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 49\n              }\n            }, item.content));\n          });\n        }));\n      }), /*#__PURE__*/React.createElement(Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.addList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        fill: \"currentColor\",\n        d: \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(ButtonText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }\n      }, \"Add List\")), Object.keys(this.state).map(function (list, i) {\n        return /*#__PURE__*/React.createElement(Droppable, {\n          key: list,\n          droppableId: list,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }\n        }, function (provided, snapshot) {\n          return /*#__PURE__*/React.createElement(Container, {\n            innerRef: provided.innerRef,\n            isDraggingOver: snapshot.isDraggingOver,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }\n          }, _this2.state[list].length ? _this2.state[list].map(function (item, index) {\n            return /*#__PURE__*/React.createElement(Draggable, {\n              key: item.id,\n              draggableId: item.id,\n              index: index,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 51\n              }\n            }, function (provided, snapshot) {\n              return /*#__PURE__*/React.createElement(Item, Object.assign({\n                innerRef: provided.innerRef\n              }, provided.draggableProps, {\n                isDragging: snapshot.isDragging,\n                style: provided.draggableProps.style,\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 59\n                }\n              }), /*#__PURE__*/React.createElement(Handle, Object.assign({}, provided.dragHandleProps, {\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 63\n                }\n              }), /*#__PURE__*/React.createElement(\"svg\", {\n                width: \"24\",\n                height: \"24\",\n                viewBox: \"0 0 24 24\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 67\n                }\n              }, /*#__PURE__*/React.createElement(\"path\", {\n                fill: \"currentColor\",\n                d: \"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 71\n                }\n              }))), item.content);\n            });\n          }) : !provided.placeholder && /*#__PURE__*/React.createElement(Notice, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 47\n            }\n          }, \"Drop items here\"), provided.placeholder);\n        });\n      })));\n    }\n  }]);\n\n  return Homepreview;\n}(Component);\n\nexport default Homepreview;","map":{"version":3,"sources":["/home/priya/Desktop/pdf-application/pdf-preview-react/src/components/Homepreview.js"],"names":["React","Component","ReactDOM","uuid","DragDropContext","Droppable","Draggable","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","copy","source","destination","droppableSource","droppableDestination","sourceClone","destClone","item","index","id","move","droppableId","grid","ITEMS","content","Homepreview","state","onDragEnd","setState","addList","e","provided","snapshot","innerRef","isDraggingOver","map","draggableProps","dragHandleProps","isDragging","style","Object","keys","i","length","placeholder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport uuid from 'uuid/v4';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n/**\n * Moves an item from one list to another list.\n */\nconst copy = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const item = sourceClone[droppableSource.index];\n\n    destClone.splice(droppableDestination.index, 0, { ...item, id: uuid() });\n    return destClone;\n};\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\n\nconst ITEMS = [\n    {\n        id: uuid(),\n        content: 'Headline'\n    },\n    {\n        id: uuid(),\n        content: 'Copy'\n    },\n    {\n        id: uuid(),\n        content: 'Image'\n    },\n    {\n        id: uuid(),\n        content: 'Slideshow'\n    },\n    {\n        id: uuid(),\n        content: 'Quote'\n    }\n];\n\nclass Homepreview extends Component {\n   \n    state = {\n        [uuid()]: []\n    };\n    onDragEnd = result => {\n        const { source, destination } = result;\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        switch (source.droppableId) {\n            case destination.droppableId:\n                this.setState({\n                    [destination.droppableId]: reorder(\n                        this.state[source.droppableId],\n                        source.index,\n                        destination.index\n                    )\n                });\n                break;\n            case 'ITEMS':\n                this.setState({\n                    [destination.droppableId]: copy(\n                        ITEMS,\n                        this.state[destination.droppableId],\n                        source,\n                        destination\n                    )\n                });\n                break;\n            default:\n                this.setState(\n                    move(\n                        this.state[source.droppableId],\n                        this.state[destination.droppableId],\n                        source,\n                        destination\n                    )\n                );\n                break;\n        }\n    };\n\n    addList = e => {\n        this.setState({ [uuid()]: [] });\n    };\n\n    // Normally you would want to split things out into separate components.\n    // But in this example everything is just done in one place for simplicity\n    render() {\n        return (\n            <DragDropContext onDragEnd={this.onDragEnd}>\n                <Droppable droppableId=\"ITEMS\" isDropDisabled={true}>\n                    {(provided, snapshot) => (\n                        <Kiosk\n                            innerRef={provided.innerRef}\n                            isDraggingOver={snapshot.isDraggingOver}>\n                            {ITEMS.map((item, index) => (\n                                <Draggable\n                                    key={item.id}\n                                    draggableId={item.id}\n                                    index={index}>\n                                    {(provided, snapshot) => (\n                                        <React.Fragment>\n                                            <Item\n                                                innerRef={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                                isDragging={snapshot.isDragging}\n                                                style={\n                                                    provided.draggableProps\n                                                        .style\n                                                }>\n                                                {item.content}\n                                            </Item>\n                                            {snapshot.isDragging && (\n                                                <Clone>{item.content}</Clone>\n                                            )}\n                                        </React.Fragment>\n                                    )}\n                                </Draggable>\n                            ))}\n                        </Kiosk>\n                    )}\n                </Droppable>\n                <Content>\n                    <Button onClick={this.addList}>\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                            <path\n                                fill=\"currentColor\"\n                                d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\"\n                            />\n                        </svg>\n                        <ButtonText>Add List</ButtonText>\n                    </Button>\n                    {Object.keys(this.state).map((list, i) => (\n                        <Droppable key={list} droppableId={list}>\n                            {(provided, snapshot) => (\n                                <Container\n                                    innerRef={provided.innerRef}\n                                    isDraggingOver={snapshot.isDraggingOver}>\n                                    {this.state[list].length\n                                        ? this.state[list].map(\n                                              (item, index) => (\n                                                  <Draggable\n                                                      key={item.id}\n                                                      draggableId={item.id}\n                                                      index={index}>\n                                                      {(provided, snapshot) => (\n                                                          <Item\n                                                              innerRef={\n                                                                  provided.innerRef\n                                                              }\n                                                              {...provided.draggableProps}\n                                                              isDragging={\n                                                                  snapshot.isDragging\n                                                              }\n                                                              style={\n                                                                  provided\n                                                                      .draggableProps\n                                                                      .style\n                                                              }>\n                                                              <Handle\n                                                                  {...provided.dragHandleProps}>\n                                                                  <svg\n                                                                      width=\"24\"\n                                                                      height=\"24\"\n                                                                      viewBox=\"0 0 24 24\">\n                                                                      <path\n                                                                          fill=\"currentColor\"\n                                                                          d=\"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\"\n                                                                      />\n                                                                  </svg>\n                                                              </Handle>\n                                                              {item.content}\n                                                          </Item>\n                                                      )}\n                                                  </Draggable>\n                                              )\n                                          )\n                                        : !provided.placeholder && (\n                                              <Notice>Drop items here</Notice>\n                                          )}\n                                    {provided.placeholder}\n                                </Container>\n                            )}\n                        </Droppable>\n                    ))}\n                </Content>\n            </DragDropContext>\n        );\n    }\n}\n\nexport default Homepreview;"]},"metadata":{},"sourceType":"module"}